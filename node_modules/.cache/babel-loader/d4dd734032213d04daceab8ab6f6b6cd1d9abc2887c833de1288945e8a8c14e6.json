{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abubakar Awan\\\\Desktop\\\\InternShip work\\\\reactIntro\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/NavBar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark Mode Has been enabled.\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Has been enabled.\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-1\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(TextForm, {\n              heading: \"Enter the text to analyze: \",\n              mode: mode,\n              showAlert: showAlert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","Alert","Navbar","TextForm","React","useState","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","Switch","path","heading","_c","$RefreshReg$"],"sources":["C:/Users/Abubakar Awan/Desktop/InternShip work/reactIntro/my-app/src/App.js"],"sourcesContent":["import About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/NavBar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react'\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n\nfunction App() {\n\tconst [mode, setMode] = useState('light');\n\n\tconst [alert, setAlert] = useState(null);\n\n\tconst showAlert = (message, type) => {\n\t\tsetAlert({\n\t\t\tmessage: message,\n\t\t\ttype: type,\n\t\t})\n\n\t\tsetTimeout(() => {\n\t\t\tsetAlert(null);\n\t\t}, 1500)\n\t}\n\n\tconst toggleMode = () => {\n\t\tif (mode === 'light') {\n\t\t\tsetMode('dark');\n\t\t\tdocument.body.style.backgroundColor = 'black'\n\t\t\tshowAlert(\"Dark Mode Has been enabled.\", \"success\")\n\t\t}\n\t\telse {\n\t\t\tsetMode('light');\n\t\t\tdocument.body.style.backgroundColor = 'white'\n\t\t\tshowAlert(\"Light Mode Has been enabled.\", \"success\")\n\t\t}\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Router>\n\t\t\t\t<Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n\t\t\t\t<Alert alert={alert} />\n\n\t\t\t\t<div className=\"container my-1\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/about\">\n\t\t\t\t\t\t\t<About />\n\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t<TextForm heading={\"Enter the text to analyze: \"} mode={mode} showAlert={showAlert} />\n\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t\t{/* <div className=\"container my-5\">\n            </div> */}\n\t\t\t</Router>\n\n\t\t</>\n\t);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG1E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;IACpCH,QAAQ,CAAC;MACRE,OAAO,EAAEA,OAAO;MAChBC,IAAI,EAAEA;IACP,CAAC,CAAC;IAEFC,UAAU,CAAC,MAAM;MAChBJ,QAAQ,CAAC,IAAI,CAAC;IACf,CAAC,EAAE,IAAI,CAAC;EACT,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACxB,IAAIR,IAAI,KAAK,OAAO,EAAE;MACrBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CR,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;IACpD,CAAC,MACI;MACJH,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CR,SAAS,CAAC,8BAA8B,EAAE,SAAS,CAAC;IACrD;EACD,CAAC;EACD,oBACCT,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACClB,OAAA,CAACJ,MAAM;MAAAsB,QAAA,gBACNlB,OAAA,CAACT,MAAM;QAAC4B,KAAK,EAAC,WAAW;QAACd,IAAI,EAAEA,IAAK;QAACQ,UAAU,EAAEA;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChEvB,OAAA,CAACV,KAAK;QAACiB,KAAK,EAAEA;MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEvBvB,OAAA;QAAKwB,SAAS,EAAC,gBAAgB;QAAAN,QAAA,eAC9BlB,OAAA,CAACyB,MAAM;UAAAP,QAAA,gBACNlB,OAAA,CAACF,KAAK;YAAC4B,IAAI,EAAC,QAAQ;YAAAR,QAAA,eACnBlB,OAAA,CAACX,KAAK;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEH,CAAC,eACRvB,OAAA,CAACF,KAAK;YAAC4B,IAAI,EAAC,GAAG;YAAAR,QAAA,eACdlB,OAAA,CAACR,QAAQ;cAACmC,OAAO,EAAE,6BAA8B;cAACtB,IAAI,EAAEA,IAAK;cAACI,SAAS,EAAEA;YAAU;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGC;EAAC,gBAER,CAAC;AAEL;AAACnB,EAAA,CApDQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}